<?xml version="1.0" encoding="UTF-8"?>
<project name="MSC" basedir="." default="menu">

    <!-- Default property file, override with -DpropertyFile=filename -->
    <property name="propertyFile" value="config/build.properties" />
    <if>
        <isset property="propertyFile" />
        <then>
            <available file="${propertyFile}" property="propertyFileExists"/>
            <if>
                <isset property="propertyFileExists"/>
                <then>
                    <property file="${propertyFile}" override="yes"/>
                </then>
            </if>
        </then>
    </if>

    <!-- ==========================  -->
    <!-- Target: Main target         -->
    <!-- ==========================  -->
    <target name="menu">
         <input propertyname="buildchoice" validargs="prepare, init-databases, migrate-databases, rebuild-di">
             Prepare - prepare
             Init apps databases - init-databases
             Migrate apps databases - migrate-databases
             Rebuild di container - rebuild-di
         </input>
         <phingcall target="${buildchoice}"></phingcall>
    </target>
 
    <!-- ********************************************************************** -->
    <!-- *******************************TARGETS******************************** -->
    <!-- ********************************************************************** -->
    <target name="prepare">
        <echo msg="Creating config file ..." />
        <copy file="../../project/config/default.xml" 
              tofile="../../project/config/config.xml" 
              overwrite="true">
            <filterchain>
                <expandproperties />
            </filterchain>
        </copy>
        <copy file="resources/${environment}.htaccess" 
              tofile="../../public/.htaccess" 
              overwrite="true">
        </copy>
    </target>
    
    <target name="rebuild-di">
        <echo msg="Rebuilding DI container ..."/>
        <exec command="php -f di/build-container.php di/${environment} > logs/di.container.build.out"/>
    </target>
    
    <target name="init-databases">
    	<foreach list="${application.domains}" param="param.database" target="init-database"/>
    </target>
    
    <target name="init-database">
        <echo msg="Dropping/Creating database: ${database.prefix}_${param.database} ... "/>
        <fail unless="param.database" message="FAIL:: Property 'param.database' not set." />
        <exec command="php -f scripts/dbcreate.php ${database.host} ${database.username} ${database.password} ${database.prefix}_${param.database} >> logs/create.db.out"/>
    </target>
    
    <target name="migrate-databases">
    	<foreach list="${application.domains}" param="domain.name" target="migrate-database"/>
    </target>
    
    <target name="migrate-database">
    	<fail unless="domain.name" message="FAIL:: Property 'domain.name' not set." />
        <echo msg="Migrating: ${database.prefix}_${domain.name} in ${domain.name}... "/>
        <if>
           <equals arg1="${database.password}" arg2=""/>
           <then>
               <exec command="${shell.execute}liquibase --driver=com.mysql.jdbc.Driver --url=jdbc:mysql://${database.host}/${database.prefix}_${domain.name} --username=${database.username} --changeLogFile=../../apps/${domain.name}/database/changelog.master.xml update > ../../build/logs/${domain.name}.reporting.changelog.master.out" dir="../library/Liquibase/" />
           </then>
           <else>
               <exec command="${shell.execute}liquibase --driver=com.mysql.jdbc.Driver --url=jdbc:mysql://${database.host}/${database.prefix}_${domain.name} --username=${database.username} --password=${database.password} --changeLogFile=../../apps/${domain.name}/database/changelog.master.xml update > ../../build/logs/${domain.name}.reporting.changelog.master.out" dir="../library/Liquibase/" />
           </else>
        </if>
    </target>

</project>